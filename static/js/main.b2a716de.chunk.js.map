{"version":3,"sources":["assets/email.svg","assets/github.svg","assets/linkedin.svg","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/TextCard/Textcard.tsx","constants/constants.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavContainer","styled","div","NavLinks","nav","Navbar","activeClass","styles","active","className","duration","offset","smooth","spy","to","TextCardContainer","Link","a","TextTile","title","description","link","href","target","projectData","AppContainer","AppContent","SectionContainer","SectionTitle","h3","ContactIconsContainer","ContactIcon","App","id","map","key","rel","src","EmailIcon","alt","LinkedinIcon","GithubIcon","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2a716de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/email.dc5b197e.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.a112a001.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.89dcd695.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-link\":\"Navbar_nav-link__3ty-X\",\"active\":\"Navbar_active__3RZaI\"};","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nimport styles from \"./Navbar.module.css\";\r\n\r\nconst NavContainer = styled.div`\r\n  background-color: white;\r\n  box-shadow: 0 1px 4px -1px rgba(var(--rgb-arsenic), 0.25);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst NavLinks = styled.nav`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 4rem;\r\n  margin: 0 auto;\r\n  padding: 0 6rem;\r\n  width: 80rem;\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const rem = 16;\r\n  const offset = -8 * rem;\r\n\r\n  return (\r\n    <NavContainer>\r\n      <NavLinks>\r\n        <Link\r\n          activeClass={styles.active}\r\n          className={styles[\"nav-link\"]}\r\n          duration={500}\r\n          offset={offset}\r\n          smooth={true}\r\n          spy={true}\r\n          to=\"home\"\r\n        >\r\n          Home\r\n        </Link>\r\n        <Link\r\n          activeClass={styles.active}\r\n          className={styles[\"nav-link\"]}\r\n          duration={500}\r\n          offset={offset}\r\n          smooth={true}\r\n          spy={true}\r\n          to=\"projects\"\r\n        >\r\n          Projects\r\n        </Link>\r\n        <Link\r\n          activeClass={styles.active}\r\n          className={styles[\"nav-link\"]}\r\n          duration={500}\r\n          offset={offset}\r\n          smooth={true}\r\n          spy={true}\r\n          to=\"contact\"\r\n        >\r\n          Contact\r\n        </Link>\r\n      </NavLinks>\r\n    </NavContainer>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface TextCardProps {\r\n  title: string;\r\n  description: string;\r\n  link?: string;\r\n}\r\n\r\nconst TextCardContainer = styled.div`\r\n  padding: 0 20px 20px;\r\n\r\n  &:last-child {\r\n    padding-bottom: 0px;\r\n  }\r\n`;\r\n\r\nconst Link = styled.a`\r\n  color: var(--vista-blue);\r\n`;\r\n\r\nconst TextTile = ({ title, description, link }: TextCardProps) => (\r\n  <TextCardContainer>\r\n    <h4>\r\n      {link && (\r\n        <>\r\n          <Link href={link} target=\"_blank\">\r\n            Link\r\n          </Link>\r\n          &nbsp;|&nbsp;\r\n        </>\r\n      )}\r\n      {title}\r\n    </h4>\r\n    <p>{description}</p>\r\n  </TextCardContainer>\r\n);\r\n\r\nexport default TextTile;\r\n","export const projectData = [\r\n  {\r\n    title: \"Map of Japan\",\r\n    description:\r\n      \"Map of Japan rendered in D3 that cycles through average monthly temperature\",\r\n    link: \"https://mapofjapan.azurewebsites.net/\"\r\n  },\r\n  {\r\n    title: \"JavaScript Calculator\",\r\n    description: \"Simple calculator written in JavaScript\",\r\n    link: \"https://codepen.io/Kiwilicious/pen/VQJPyv\"\r\n  },\r\n  {\r\n    title: \"Old Site\",\r\n    description:\r\n      \"An older version of the site; made with a static site generator\",\r\n    link: \"https://github.com/Kiwilicious/old-site\"\r\n  },\r\n  {\r\n    title: \"Tinychat\",\r\n    description: \"POC of a simple chat app written in jQuery and websockets\",\r\n    link: \"https://github.com/Kiwilicious/tinychat\"\r\n  },\r\n  {\r\n    title: \"Customer Records\",\r\n    description: \"Code to filter out customers within 100km of a location\",\r\n    link: \"https://github.com/Kiwilicious/customer-records\"\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport TextCard from \"./components/TextCard/Textcard\";\r\n\r\nimport { projectData } from \"./constants/constants\";\r\nimport EmailIcon from \"./assets/email.svg\";\r\nimport GithubIcon from \"./assets/github.svg\";\r\nimport LinkedinIcon from \"./assets/linkedin.svg\";\r\n\r\nconst AppContainer = styled.div``;\r\n\r\nconst AppContent = styled.div`\r\n  margin: 4rem auto;\r\n  padding: 0 1rem;\r\n  width: 60rem;\r\n`;\r\n\r\nconst SectionContainer = styled.div`\r\n  margin-bottom: 4rem;\r\n  line-height: 2rem;\r\n`;\r\n\r\nconst SectionTitle = styled.h3`\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst ContactIconsContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ContactIcon = styled.a`\r\n  margin-right: 2rem;\r\n  width: 50px;\r\n  height: 50px;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <AppContainer>\r\n      <Navbar />\r\n      <AppContent>\r\n        <SectionContainer id=\"home\">\r\n          <h1>James Hwang</h1>\r\n          <h2>FullStack Web Developer</h2>\r\n          <hr />\r\n          <p>\r\n            This is a simple site made in React and hosted on Github where you\r\n            can also check out the source code. Contains some of my personal\r\n            projects and code snippets. Feel free to reach out to me using the\r\n            contacts posted below.\r\n          </p>\r\n        </SectionContainer>\r\n        <SectionContainer id=\"projects\">\r\n          <SectionTitle>Projects</SectionTitle>\r\n          {projectData.map(({ title, description, link }) => (\r\n            <TextCard\r\n              title={title}\r\n              description={description}\r\n              link={link}\r\n              key={title}\r\n            />\r\n          ))}\r\n        </SectionContainer>\r\n        <SectionContainer id=\"contact\">\r\n          <SectionTitle>Contact</SectionTitle>\r\n          <p>\r\n            You can reach me via email and LinkedIn as well as view my profile\r\n            over at Github.\r\n          </p>\r\n          <ContactIconsContainer>\r\n            <ContactIcon\r\n              href=\"mailto:jhwang137@gmail.com\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <img src={EmailIcon} alt=\"email-icon\"></img>\r\n            </ContactIcon>\r\n            <ContactIcon\r\n              href=\"https://www.linkedin.com/in/jameshwangcali/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <img src={LinkedinIcon} alt=\"linkedin-icon\"></img>\r\n            </ContactIcon>\r\n            <ContactIcon\r\n              href=\"https://github.com/Kiwilicious\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <img src={GithubIcon} alt=\"github-icon\"></img>\r\n            </ContactIcon>\r\n          </ContactIconsContainer>\r\n        </SectionContainer>\r\n      </AppContent>\r\n    </AppContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./styles/main.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}